{"version":3,"sources":["services/appService.js","services/mensajeriaService.js","components/Login.js","components/Mensajeria.js","services/productoDataService.js","services/productoService.js","components/Form.js","components/Navbar.js","components/Producto.js","components/Listado.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["AppService","instance","this","url","token","localStorage","getItem","behaviorSubject","BehaviorSubject","logged","currentData","asObservable","updateLogged","next","getCurrent","login","username","password","ajax","post","pipe","map","response","setItem","xhr","getResponseHeader","logout","removeItem","getUserName","base64","atob","split","Object","freeze","MensajeriaService","mensajeSubjet","error","errorObj","newMessage","mensaje","message","type","setTimeout","clearMessage","success","Login","event","preventDefault","appService","state","subscribe","mensajeriaService","handleChange","setState","target","name","value","className","onSubmit","id","vaue","onChange","React","Component","Mensajeria","clase","role","onClick","data-dismiss","aria-label","aria-hidden","data","ProductoDataService","mensajeSubject","updateProductos","productos","getProductos","getProductosValue","source","ProductoServie","httpClient","productoDataService","api","searchUrl","tipoProductoApi","subject","subscription","findAll","get","search","titulo","deleteProducto","delete","Authorization","actuales","filter","x","codigo","createProducto","producto","push","findTiposProductos","Form","precio","tipoProducto","tiposProductos","tituloBusqueda","productoService","ProductoService","isCheckbox","checked","handleChangeSelect","console","log","buscarProducto","JSON","stringify","parse","htmlFor","tipo","index","descripcion","Navbar","e","window","confirm","Producto","scope","props","editarProducto","Listado","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd72acdb.chunk.js","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class AppService {\r\n    constructor() {\r\n        if(!AppService.instance) {\r\n            \r\n            this.url = 'http://localhost:8080/ws-rest-server/api/';\r\n            \r\n            let token = localStorage.getItem('Access-Token');\r\n            //rxjs\r\n            this.behaviorSubject = new BehaviorSubject({logged: token!=null});\r\n            this.currentData = this.behaviorSubject.asObservable();\r\n\r\n            this.updateLogged = (logged) => {\r\n                this.behaviorSubject.next(logged);\r\n            }   \r\n        \r\n            this.getCurrent = () => {\r\n                return this.currentData;\r\n            }\r\n\r\n            this.login = (username, password) => {\r\n                return ajax.post(`${this.url}auth?username=${username}&password=${password}`)\r\n                    .pipe(\r\n                        map(response => {\r\n                            localStorage.setItem('Access-Token', response.xhr.getResponseHeader('access-token'));\r\n                        })\r\n                );\r\n            }\r\n\r\n            this.logout = () => {\r\n\r\n                 //elimina el access token guardado en el localstorage\r\n                localStorage.removeItem('Access-Token');\r\n                localStorage.removeItem('tipoProductos');\r\n                localStorage.removeItem('username');\r\n\r\n                this.updateLogged({logged:false});\r\n            }\r\n\r\n            this.getUserName = () => {\r\n                let base64 = atob(localStorage.getItem('Access-Token'));\r\n                let username = '';\r\n                if(base64) {\r\n                    username = base64.split(\":\")[0];\r\n                }\r\n                return username;\r\n            }\r\n        }\r\n        //hace singleton esta instancia AppService\r\n        AppService.instance = this;\r\n        return this;\r\n    }\r\n }\r\n \r\n const instance = new AppService();\r\n \r\n Object.freeze(instance);\r\n\r\nexport default AppService;","import { BehaviorSubject } from \"rxjs\";\r\n\r\n//singleton\r\nclass MensajeriaService {\r\n\r\n    constructor() {\r\n\r\n        if(!MensajeriaService.instance) {\r\n\r\n            //rxjs\r\n\r\n            //Subject -> emit\r\n            this.mensajeSubjet = new BehaviorSubject({});\r\n\r\n            //Observable -> escucha\r\n            this.currentData = this.mensajeSubjet.asObservable();\r\n\r\n            this.getCurrent = () => {\r\n                return this.currentData;\r\n            }\r\n            \r\n            this.error = (errorObj) => {\r\n                const newMessage = {\r\n                    mensaje: errorObj.message || 'Error inesperado',\r\n                    type: 'alert alert-danger'\r\n                }\r\n                this.mensajeSubjet.next(newMessage);\r\n                //set timeout\r\n                setTimeout(() => {\r\n                    this.clearMessage();\r\n                }, 2500);\r\n            }\r\n\r\n            this.success = (message) => {\r\n                const newMessage = {\r\n                    mensaje: message,\r\n                    type: 'alert alert-success'\r\n                }\r\n                this.mensajeSubjet.next(newMessage);\r\n                //set timeout\r\n                setTimeout(() => {\r\n                    this.clearMessage();\r\n                }, 2500);\r\n            }\r\n            this.clearMessage = () => {\r\n                const newMessage = {\r\n                    mensaje: null,\r\n                    type: null\r\n                }\r\n                this.mensajeSubjet.next(newMessage);\r\n            }\r\n        }\r\n\r\n        MensajeriaService.instance = this;\r\n        return this;\r\n    }\r\n}\r\n\r\nconst instance = new MensajeriaService;\r\nObject.freeze(instance);\r\n\r\nexport default MensajeriaService;","import  React from 'react';\r\nimport AppService from '../services/appService';\r\nimport MensajeriaService from '../services/mensajeriaService';\r\n\r\nexport class Login extends React.Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n\r\n        this.appService = AppService.instance;\r\n        this.mensajeriaService = MensajeriaService.instance;\r\n\r\n        this.handleChange = event => {\r\n            this.setState(\r\n                {\r\n                    [event.target.name] : event.target.value\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    login = event => {\r\n        event.preventDefault();\r\n        this.appService.login(this.state.username, this.state.password)\r\n            .subscribe(\r\n                response => {\r\n                    this.appService.updateLogged({logged:true});\r\n                    this.mensajeriaService.clearMessage();\r\n                },\r\n                error => {\r\n                    this.mensajeriaService.error(error);\r\n                }\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mensajeriaService.clearMessage();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <form onSubmit={this.login}>\r\n                        <div className=\"form-group\">\r\n                            <label>User Name</label>\r\n                            <input \r\n                                name=\"username\" \r\n                                id=\"username\" \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                vaue={this.state.username}\r\n                                onChange={this.handleChange}\r\n                                >\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                name=\"password\" \r\n                                id=\"password\" \r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                >\r\n                            </input>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\">Login</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport MensajeriaService from \"../services/mensajeriaService\";\r\n\r\nexport class Mensajeria extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            mensaje: null, \r\n            type: null   \r\n        }\r\n\r\n        //aca uso la instancia de MensajeriaSrevice\r\n        this.mensajeriaService = MensajeriaService.instance;\r\n    }\r\n\r\n    render() {\r\n        let clase = `col-12 ${this.state.type} alert-dismissible fade show`;\r\n        return(\r\n            <>\r\n            {\r\n                this.state.mensaje !=null && \r\n                <div className=\"row\">\r\n                    <div className={clase} role=\"alert\">\r\n                        {this.state.mensaje}\r\n                        <button type=\"button\" onClick={this.mensajeriaService.clearMessage} className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n\r\n    //hooks antes de render, \r\n    componentDidMount() {\r\n        //escuchar los mensajes que emita MensajeriaService\r\n        this.mensajeriaService.getCurrent().subscribe(\r\n            data =>  this.setState({\r\n                mensaje: null || data.mensaje,\r\n                type: data.type\r\n            })\r\n        )\r\n    }\r\n}","import { BehaviorSubject } from \"rxjs\";\r\n\r\nexport class ProductoDataService {\r\n\r\n    constructor() {\r\n        if(!ProductoDataService.instance) {\r\n            this.mensajeSubject = new BehaviorSubject([]);\r\n            this.currentData = this.mensajeSubject.asObservable();\r\n\r\n            this.updateProductos = (productos) => {\r\n                this.mensajeSubject.next(productos);\r\n            }\r\n\r\n            this.getProductos = () => {\r\n                return this.currentData;\r\n            }\r\n\r\n            this.getProductosValue = () => {\r\n                return this.currentData.source.value;\r\n            }\r\n        }\r\n        ProductoDataService.instance = this;\r\n        return this;\r\n    }\r\n}\r\n\r\nconst instance = new ProductoDataService();\r\n\r\nObject.freeze(instance);\r\n\r\nexport default ProductoDataService;","import { BehaviorSubject} from 'rxjs';\r\nimport MensajeriaService from './mensajeriaService';\r\nimport ProductoDataService from './productoDataService';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { map} from 'rxjs/operators';\r\n\r\nexport class ProductoServie {\r\n    \r\n    constructor() {\r\n\r\n        if(!ProductoServie.instance) {\r\n            this.httpClient  = ajax;\r\n            this.productoDataService = ProductoDataService.instance;\r\n            this.mensajeriaService = MensajeriaService.instance;\r\n\r\n            this.url = `http://localhost:8080/ws-rest-server/`;\r\n            this.api = 'api/productos';\r\n            this.searchUrl = 'api/productos/filtro/';\r\n            this.tipoProductoApi = 'api/tipoproducto';\r\n\r\n            this.subject = new BehaviorSubject([]);\r\n            this.subscription = this.subject.asObservable();\r\n            \r\n            this.findAll = () => {\r\n                return this.httpClient.get(`${this.url}${this.api}`);\r\n            }\r\n\r\n            this.search = (titulo) => {\r\n                return this.httpClient.get(`${this.url}${this.searchUrl}${titulo}`)\r\n                .pipe(\r\n                    map(response => {\r\n                        const productos = response.response;\r\n                        this.productoDataService.updateProductos(productos);\r\n                        return response;\r\n                    })\r\n                );\r\n            }\r\n\r\n            this.deleteProducto = (id) => {\r\n                return this.httpClient.delete(\r\n                    `${this.url}${this.api}/${id}`,\r\n                    {\r\n                        Authorization: `Basic ${localStorage.getItem('Access-Token')}`\r\n                    }\r\n                ).pipe(\r\n                    map(response => {\r\n                        //console.log(response.response);\r\n                        let actuales = this.productoDataService.getProductosValue();\r\n                        actuales = actuales.filter(x=> x.codigo !== id);\r\n                        this.productoDataService.updateProductos(actuales);\r\n                        return response;\r\n                    })\r\n                );\r\n            }\r\n\r\n            this.createProducto = (producto) => {\r\n                return this.httpClient.post(\r\n                    `${this.url}${this.api}`,\r\n                    producto,\r\n                    {\r\n                        Authorization: `Basic ${localStorage.getItem('Access-Token')}`,\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                ).pipe(\r\n                    map(response => {\r\n                        let actuales = this.productoDataService.getProductosValue();\r\n                        actuales.push(response.response);\r\n                        this.productoDataService.updateProductos(actuales);\r\n                        return response;\r\n                    }\r\n                ));\r\n            }\r\n\r\n            this.findTiposProductos = () => {\r\n                return this.httpClient.get(`${this.url}${this.tipoProductoApi}`);\r\n            }\r\n\r\n            ProductoServie.instance = this;\r\n            return this;\r\n        }\r\n    }\r\n}\r\n\r\nconst instance = new ProductoServie();\r\n\r\nObject.freeze(instance);\r\n\r\nexport default ProductoServie;","import  React from 'react';\r\nimport ProductoDataService from '../services/productoDataService';\r\nimport ProductoService from '../services/productoService';\r\nimport MensajeriaService from '../services/mensajeriaService';\r\n\r\nexport class Form extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            codigo:\"\",\r\n            titulo:\"\",\r\n            precio:\"\",\r\n            tipoProducto:\"\",\r\n            tiposProductos:[],\r\n            tituloBusqueda: \"\"\r\n        };\r\n\r\n        this.productoService = ProductoService.instance;\r\n        this.productoDataService = ProductoDataService.instance;\r\n        this.mensajeriaService = MensajeriaService.instance;\r\n\r\n        this.handleChange = event => {\r\n            let isCheckbox = event.target.type === \"checkbox\";\r\n            this.setState(\r\n                {\r\n                    [event.target.name] : isCheckbox\r\n                    ? event.target.checked \r\n                    : event.target.value\r\n                }\r\n            );\r\n        }\r\n\r\n        this.handleChangeSelect = event => {\r\n            this.setState(\r\n                {\r\n                    \"tipoProducto\": event.target.value\r\n                }\r\n            );\r\n        }\r\n\r\n        this.createProducto = event => {\r\n            event.preventDefault();\r\n            //json\r\n            let producto = {\r\n                codigo: this.state.codigo,\r\n                titulo: this.state.titulo,\r\n                precio: this.state.precio,\r\n                tipoProducto: {\r\n                    id: this.state.tipoProducto\r\n                }\r\n            }\r\n            \r\n            this.productoService.createProducto(producto).subscribe(\r\n                data => {\r\n                    console.log(data.response);\r\n                    this.setState({\r\n                        codigo: '',\r\n                        titulo: '',\r\n                        precio: '',\r\n                        tipoProducto: {\r\n                            id: 0\r\n                        }\r\n                    });\r\n                    this.mensajeriaService.success(`Se ha creado exitosamente el producto`);\r\n                },\r\n                error => {\r\n                    this.mensajeriaService.error(`No se ha creado exitosamente el producto, ${error}`);\r\n                }\r\n            );            \r\n        }\r\n        \r\n        this.buscarProducto = event => {\r\n            event.preventDefault();\r\n            if(this.state.tituloBusqueda) {\r\n                this.productoService.search(this.state.tituloBusqueda).subscribe(\r\n                    data => {\r\n                        this.productoDataService.updateProductos(data.response);\r\n                    },error => {\r\n                        this.mensajeriaService.error(error);\r\n                    }\r\n                );\r\n            }else {\r\n                this.productoService.findAll().subscribe(\r\n                    response => {\r\n                        this.productoDataService.updateProductos(response.response);\r\n                    },error => {\r\n                        this.mensajeriaService.error(error);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount()  {\r\n        debugger;\r\n        //cargo los tipo de productos\r\n        this.productoService.findTiposProductos().subscribe(\r\n            data => {\r\n                const tiposProductos = data.response;\r\n                localStorage.setItem('tiposProductos', JSON.stringify(tiposProductos));\r\n\r\n                this.setState({\r\n                    tiposProductos: tiposProductos\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        //obtenemos los tipos de productos\r\n        const tipoProducto = JSON.parse(localStorage.getItem('tiposProductos')) || [];\r\n        \r\n        return (\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={this.buscarProducto}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"tituloBusqueda\">Título</label>\r\n                            <input type=\"text\" className=\"form-control\" \r\n                                name=\"tituloBusqueda\" \r\n                                id=\"tituloBusqueda\"\r\n                                value={this.tituloBusqueda}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\">Buscar Productos</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={this.createProducto}>                \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"codigo\">Codigo</label>\r\n                            <input type=\"text\" className=\"form-control\" \r\n                                name=\"codigo\"\r\n                                id=\"codigo\"\r\n                                value={this.state.codigo}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Título</label>\r\n                            <input type=\"text\" className=\"form-control\" \r\n                                id=\"password\"\r\n                                name=\"titulo\"\r\n                                value={this.state.titulo}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"precio\">Precio</label>\r\n                            <input type=\"text\" className=\"form-control\" \r\n                                name=\"precio\" \r\n                                id=\"precio\"\r\n                                value={this.state.precio}\r\n                                onChange={this.handleChange}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"custom-select\" id=\"tipoProducto\" aria-label=\"Example select with button addon\"\r\n                                value={this.state.tipoProducto}\r\n                                onChange={this.handleChangeSelect}>\r\n                                    {\r\n                                        tipoProducto.map(function(tipo, index){\r\n                                            return <option key={index} id={index} value={tipo.id}>{tipo.descripcion}</option>\r\n                                        })\r\n                                    }\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"btn btn-success\">Grabar</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Fragment } from \"react\";\r\nimport { AppService} from '../services/appService';\r\n\r\nexport class Navbar extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: ''\r\n        }\r\n        this.appService = AppService.instance;\r\n\r\n    }\r\n    \r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        let confirma = window.confirm('¿Está seguro?');\r\n        if(confirma) {\r\n            this.appService.logout();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let username = this.appService.getUserName();\r\n        this.setState(\r\n            {\r\n                username: username\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-light\">\r\n                <a className=\"navbar-brand\">Usuario: {this.state.username}</a>\r\n                <button className=\"btn btn-info my-2 my-sm-0\" type=\"submit\" onClick={this.logout}>\r\n                    Logout\r\n                </button>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport MensajeriaService from '../services/mensajeriaService';\r\n//import ProuctoDataService from '../services/productoDataService';\r\nimport ProductoServie from '../services/productoService';\r\n\r\n/**\r\n * Producto recibo por props la funcion deleteProducto\r\n */\r\nclass Producto extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.productoService = ProductoServie.instance;\r\n        // this.productoDataService = ProuctoDataService.instance;\r\n        this.mensajeriaService = MensajeriaService.instance;\r\n\r\n        this.deleteProducto = (id) => {\r\n            if(window.confirm('Desea eliminar')) {\r\n                this.productoService.deleteProducto(id).subscribe(\r\n                    data => {\r\n                        this.mensajeriaService.success(`Se ha eliminado exitosamente el producto ${id}`)\r\n                    },\r\n                    error => {\r\n                        console.log(error);\r\n                        this.mensajeriaService.error({message: `NO se ha eliminado exitosamente el producto ${id}`})\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        //editar \r\n    }\r\n\r\n    render() {\r\n        // console.log('Producto render');\r\n        // console.log(this.props);\r\n\r\n        return (\r\n\r\n            <tr>\r\n                <th scope=\"row\">\r\n                    {this.props.producto.id}\r\n                </th>\r\n                <th>\r\n                    {this.props.producto.codigo}\r\n                </th>\r\n                <td>\r\n                    {this.props.producto.titulo}\r\n                </td>\r\n                <td>\r\n                    {this.props.producto.precio}\r\n                </td>\r\n                <td>\r\n                    {this.props.producto.tipoProducto.descripcion}\r\n                </td>\r\n                <td>\r\n                    <button \r\n                        className=\"btn btn-danger\" \r\n                        onClick={(e) =>this.deleteProducto(this.props.producto.codigo)}\r\n                    >\r\n                        Eliminar\r\n                    </button>\r\n\r\n                    <button \r\n                        className=\"btn btn-primary ml-2\" \r\n                        onClick={(e) =>this.editarProducto(this.props.producto)}\r\n                    >\r\n                        Editar\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Producto;","import React from 'react';\r\nimport Producto from './Producto';\r\nimport ProductoService from '../services/productoService';\r\nimport ProductoDataService from '../services/productoDataService';\r\n\r\nexport class Listado extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            productos: []\r\n        }\r\n\r\n        this.productoDataService  = ProductoDataService.instance;\r\n        this.productoService = ProductoService.instance;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productoService.findAll().subscribe(\r\n            data => {\r\n                this.productoDataService.updateProductos(data.response);\r\n            }\r\n        );\r\n\r\n        this.productoDataService.getProductos().subscribe(\r\n            data => this.setState(\r\n                {\r\n                    productos: data\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-12\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Título</th>\r\n                                <th scope=\"col\">Precio</th>\r\n                                <th scope=\"col\">Codigo</th>\r\n                                <th scope=\"col\">Tipo</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.productos.map(function(producto, index){\r\n                                    // return <tr>\r\n                                    // <th scope=\"row\">{prod.id}</th>\r\n                                    // <td>{prod.titulo}</td>\r\n                                    // <td>{prod.precio}</td>\r\n                                    // <td>{prod.codigo}</td>\r\n                                    // <td>{prod.tipoProducto.descripcion}</td>\r\n                                    // </tr>\r\n                                    return <Producto key={index} producto={producto}> </Producto>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import  React from 'react';\r\nimport { Login } from './Login';\r\nimport { Mensajeria } from './Mensajeria';\r\nimport { Form } from './Form';\r\nimport { Navbar} from './Navbar';\r\nimport { Listado} from './Listado';\r\nimport { AppService} from '../services/appService';\r\n\r\nexport class Layout extends React.Component {\r\n\r\n    //contructor\r\n    constructor() {\r\n        super();\r\n\r\n        let token = localStorage.getItem('Access-Token');\r\n\r\n        //state\r\n        this.state = {\r\n            logged: token != null\r\n        }\r\n        \r\n        this.appService = AppService.instance;\r\n    }\r\n\r\n    render() {\r\n        //props\r\n        // console.log(this.state.productos);\r\n        return (\r\n            <>\r\n            <Mensajeria></Mensajeria>\r\n            {\r\n                this.state.logged && \r\n                <Navbar></Navbar>\r\n            }\r\n            {\r\n                !this.state.logged &&\r\n                <Login></Login>\r\n            }            \r\n            {\r\n                this.state.logged &&\r\n                <Form></Form>\r\n            }\r\n            {/* <button className=\"btn btn-primary\" onClick={this.findProductos}>Cargar productos</button> */}\r\n            {\r\n                this.state.logged &&\r\n                <Listado productos={this.state.productos}></Listado>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n\r\n    //\r\n    componentDidMount() {\r\n        this.appService.getCurrent().subscribe(\r\n            data => {\r\n                this.setState(\r\n                    {\r\n                        logged: data.logged\r\n                    }\r\n                )\r\n            }\r\n        );\r\n    }\r\n}","import {Layout} from './components/Layout'\n\nfunction App() {\n  return (\n    <>\n      <Layout></Layout>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}